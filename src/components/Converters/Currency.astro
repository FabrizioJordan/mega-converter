---

---

<section>
  <article class="flex flex-col gap-4 justify-center items-start">
    <h2 class="converterTitle">Currency Converter</h2>
    <div class="flex flex-row gap-4 items-center">
      <div class="flex flex-col gap-4">
        <div class="custom-select">
          <select name="currency" class="rounded-lg currency">
            <option value="USD">USD</option>
            <option value="EUR" selected>EUR</option>
          </select>
        </div>
        <input
          class="rounded-lg px-4 py-2 text-black"
          type="text"
          name=""
          id="input_currency"
        />
      </div>
      <div class="flex flex-col gap-4">
        <div class="custom-select">
          <select name="currency" class="rounded-lg currency">
            <option value="USD" selected>USD</option>
            <option value="EUR">EUR</option>
          </select>
        </div>
        <input
          class="rounded-lg px-4 py-2 bg-[#ffffff6e] text-black"
          type="text"
          name=""
          id="output_currency"
          disabled
        />
      </div>
    </div>
    <div class="flex flex-row gap-4">
      <!-- Botón para intercambiar las divisas -->
      <button
        class="rounded-lg bg-[#005647] px-6 py-2.5"
        id="swapButton">Swap</button
      >
      <button
        class="rounded-lg bg-[#1d5b00] px-6 py-2.5"
        id="convertButton">Convert</button
      >
    </div>

    <p class="alert text-lg font-medium tracking-wider"></p>
  </article>
</section>

<style>
  .custom-select {
    @apply relative min-w-[50px];
  }

  .custom-select select {
    @apply appearance-none w-full text-lg border border-[#caced1] rounded-lg text-black cursor-pointer px-3 py-1.5;
  }

  .custom-select::before,
  .custom-select::after {
    --size: 0.3rem;
    position: absolute;
    content: "";
    right: 1rem;
    pointer-events: none;
  }

  .custom-select::before {
    border-left: var(--size) solid transparent;
    border-right: var(--size) solid transparent;
    border-bottom: var(--size) solid black;
    top: 40%;
  }

  .custom-select::after {
    border-left: var(--size) solid transparent;
    border-right: var(--size) solid transparent;
    border-top: var(--size) solid black;
    top: 55%;
  }
</style>

<script>
  // @ts-nocheck

  const convertButton = document.getElementById("convertButton");
  const swapButton = document.getElementById("swapButton");
  const select = document.querySelectorAll(".currency");
  const input_currency = document.getElementById("input_currency");
  const output_currency = document.getElementById("output_currency");
  const alertElement = document.querySelector(".alert");


  function alertText(text) {
    alertElement.textContent = text
      setTimeout(() => {
        alertElement.textContent = ""
      }, 800)
  }

  newFunction();

  function newFunction() {
    fetch(`https://api.frankfurter.app/currencies`)
      .then((data) => data.json())
      .then((data) => {
        const entries = Object.entries(data);
        for (var i = 0; i < entries.length; i++) {
          if (entries[i][0] !== "USD" && entries[i][0] !== "EUR") {
            // Evita agregar USD y EUR
            select[0].innerHTML += `<option value="${entries[i][0]}">${entries[i][0]}</option>`;
            select[1].innerHTML += `<option value="${entries[i][0]}">${entries[i][0]}</option>`;
          }
        }
      });
  }

  function convert() {
    const input_currency_val = input_currency.value;

    // Verificación de si el input tiene un valor y es un número
    if (!input_currency_val || isNaN(input_currency_val) || input_currency_val <= 0) {
      output_currency.value = ""
      
      alertText("Please enter a valid amount")

      return; // Sale de la función si el input no es válido
    }

    if (select[0].value != select[1].value) {
      const host = "api.frankfurter.app";
      fetch(
        `https://${host}/latest?amount=${input_currency_val}&from=${select[0].value}&to=${select[1].value}`
      )
        .then((val) => val.json())
        .then((val) => {
          output_currency.value = Object.values(val.rates)[0];
        })
        .catch((error) => {
          alertText("An error occurred during the conversion");
        });
    } else {
      alertText("Please select two different currencies");
    }
  }

  // Función para intercambiar las divisas seleccionadas
  function swapCurrencies() {
    const tempValue = select[0].value;
    select[0].value = select[1].value;
    select[1].value = tempValue;
  }

  convertButton?.addEventListener("click", convert);
  swapButton?.addEventListener("click", swapCurrencies);

</script>
