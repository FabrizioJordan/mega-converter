---
import EMtoPX from "./Text/EMtoPX.astro";
import CMtoPX from "./Text/CMtoPX.astro";
import InchesConverter from "./Text/InchesConverter.astro";
---

<section>
    <article class="max-w-2xl flex flex-col justify-center items-start gap-8">
        <h3 class="text-2xl md:text-3xl text-balance">Text Converters.</h3>

        <!-- Lista de títulos de convertidores con clases únicas -->
        <ul class="text-converter-title-list [&_h6]:transition-colors [&_h6]:duration-300 [&_h6]:cursor-pointer [&_h6]:text-[#8a847a] hover:[&_h6]:text-white grid grid-cols-2 justify-start items-center gap-4 tracking-wide text-lg w-full">
            <li>
                <h6 class="textConverterTitleItem-1 !text-white">EM to PX</h6>
            </li>
            <li>
                <h6 class="textConverterTitleItem-2">CM to PX</h6>
            </li>
            <li>
                <h6 class="textConverterTitleItem-3">Inches Converter</h6>
            </li>
        </ul>

        <!-- Contenedores de los convertidores con clases únicas -->
        <ul class="text-converter-content-list flex flex-row [&>li]:opacity-0 [&>li]:transition-opacity [&>li]:duration-500 w-full bg-[#ffffff1c] rounded-lg p-4">
            <li class="textConverterContentItem-1 !opacity-100">
                <EMtoPX />
            </li>
            <li class="textConverterContentItem-2 hidden">
                <CMtoPX />
            </li>
            <li class="textConverterContentItem-3 hidden">
                <InchesConverter />
            </li>
        </ul>
    </article>
</section>

<script is:inline>
    // @ts-nocheck

    document.addEventListener("astro:page-load", () => {
        function initUniqueTextConverter() {
            const $ = selector => document.querySelector(selector);
            
            const textConverterContentItems = {};
            const textConverterTitleItems = {};
            const totalTextConverters = 3;

            // Crear mapeo de elementos con clases únicas
            for (let i = 1; i <= totalTextConverters; i++) {
                textConverterContentItems[`content${i}`] = $(`.textConverterContentItem-${i}`);
                textConverterTitleItems[`title${i}`] = $(`.textConverterTitleItem-${i}`);

                if (textConverterTitleItems[`title${i}`]) {
                    textConverterTitleItems[`title${i}`].addEventListener('click', () => {
                        // Ocultar todos los contenidos de convertidores
                        for (let j = 1; j <= totalTextConverters; j++) {
                            textConverterContentItems[`content${j}`].classList.add('hidden');
                            setTimeout(() => {
                                textConverterContentItems[`content${j}`].classList.remove('!opacity-100');
                            }, 100);
                            textConverterTitleItems[`title${j}`].classList.remove('!text-white');
                        }

                        // Mostrar el contenido del convertidor correspondiente
                        textConverterContentItems[`content${i}`].classList.remove('hidden');
                        setTimeout(() => {
                            textConverterContentItems[`content${i}`].classList.add('!opacity-100');
                        }, 100);
                        textConverterTitleItems[`title${i}`].classList.add('!text-white');

                        // Guardar el estado en localStorage con un ID específico
                        localStorage.setItem('activeTextConverterItem', i);
                    });
                }
            }

            // Recuperar el estado del convertidor activo desde localStorage
            const activeConverter = localStorage.getItem('activeTextConverterItem');
            if (activeConverter) {
                // Simular clic en el título correspondiente para mostrar el convertidor guardado
                textConverterTitleItems[`title${activeConverter}`].click();
            } else {
                // Mostrar el primer convertidor si no hay ninguno guardado
                textConverterTitleItems[`title1`].click();
            }
        }

        initUniqueTextConverter();
    });
</script>
