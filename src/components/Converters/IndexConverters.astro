---
import Currency from "./Currency.astro";

import EMtoPX from "./Text/EMtoPX.astro";
import ColorConverter from "./Colors/ColorConverter.astro";
import ImageConverter from "./ImageConverter.astro";
import FileConverters from "./FileConverters.astro";

---


<section class="">
    
    <article class="max-w-2xl flex flex-col justify-center items-start gap-8">
        <h3 class="text-2xl md:text-3xl text-balance">Index Converters.</h3>

        <ul class="[&_h6]:transition-colors [&_h6]:duration-300 [&_h6]:cursor-pointer [&_h6]:text-[#8a847a] hover:[&_h6]:text-white flex flex-col sm:grid grid-cols-2 justify-start items-start sm:items-center gap-4 tracking-wide text-lg w-full">
            <li>
                <h6 class="initTitle-1 !text-white">
                    Color converter
                </h6>
            </li>
            <li>
                <h6 class="initTitle-2">
                    JSONtoCSV and MarkdownConverter
                </h6>
            </li>
            <li>
                <h6 class="initTitle-3">
                    Currency converter
                </h6>
            </li>
            <li>
                <h6 class="initTitle-4">
                    Image Base64 Converter
                </h6>
            </li>
        </ul>

        <ul class="flex flex-row [&>li]:opacity-0 [&>li]:transition-opacity [&>li]:duration-500 w-full bg-[#ffffff1c] rounded-lg p-4">
            <li class="initText-1 !opacity-100">
                <ColorConverter />
            </li>
            <li class="initText-2 hidden">
                <FileConverters />
            </li>
            <li class="initText-3 hidden">
                <Currency />
            </li>
            <li class="initText-4 hidden">
                <ImageConverter />
            </li>
        </ul>
    </article>

</section>


<script is:inline>
    // @ts-nocheck

    
  document.addEventListener("astro:page-load", () => {

    function initConverterScript () {
        let $ = selector => document.querySelector(selector);
    
        let initTexts = [];
        let initTitles = [];
        let quantityOfText = 4;
    
        for (let i = 1; i <= quantityOfText; i++) {
            initTexts[`initText${i}`] = $(`.initText-${i}`);
            initTitles[`initTitle${i}`] = $(`.initTitle-${i}`);
    
            if (initTitles[`initTitle${i}`]) {
                initTitles[`initTitle${i}`].addEventListener('click', () => {
                    // Ocultar todos los initTexts
                    for (let j = 1; j <= quantityOfText; j++) {
                        initTexts[`initText${j}`].classList.add('hidden');
                        setTimeout(() => {
                            initTexts[`initText${j}`].classList.remove('!opacity-100');
                        }, 100);
                        initTitles[`initTitle${j}`].classList.remove('!text-white');
                    }
    
                    // Mostrar el initText correspondiente al initTitle clickeado
                    initTexts[`initText${i}`].classList.remove('hidden');
                    setTimeout(() => {
                        initTexts[`initText${i}`].classList.add('!opacity-100');
                    }, 100);
                    initTitles[`initTitle${i}`].classList.add('!text-white');
    
                    // Guardar el estado en localStorage
                    localStorage.setItem('activeConverter', i);
                });
            }
        }
    
        // Recuperar el estado del conversor activo desde localStorage
        const activeConverter = localStorage.getItem('activeConverter');
        if (activeConverter) {
            // Simular clic en el t√≠tulo correspondiente para mostrar el conversor guardado
            initTitles[`initTitle${activeConverter}`].click();
        } else {
            // Mostrar el primer conversor si no hay ninguno guardado
            initTitles[`initTitle1`].click();
        }
    }
    
    initConverterScript();

})
    </script>