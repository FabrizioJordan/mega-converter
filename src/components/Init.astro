---
import HEXtoRGB from "./Converters/Colors/HEXtoRGB.astro";
import HSL from "./Converters/Colors/HSL.astro";
import Currency from "./Converters/Currency.astro";
import EMtoPX from "./Converters/Units/EMtoPX.astro";
import JSONtoCSV from "./Converters/JSONtoCSV.astro";

import InchesConverter from "./Converters/Units/CMtoPX.astro";
import MarkdownConverter from "./Converters/Documents/MarkdownConverter.astro";

---


<section class="pt-12 flex flex-col gap-24 md:gap-44 text-white">
    
    <article class=" max-w-2xl flex flex-col justify-center items-start gap-8">
        <h2 class="text-5xl md:text-6xl text-balance !leading-[5.5rem]">Independent Software Converter.</h2>

        <ul class="[&_h6]:transition-colors [&_h6]:duration-300 [&_h6]:cursor-pointer [&_h6]:text-[#8a847a] hover:[&_h6]:text-white flex flex-row justify-center items-center gap-8 tracking-wide text-lg">
            <li>
                <h6 class="initTitle-1 !text-white">JSON to CSV</h6>
            </li>
            <li>
                <h6 class="initTitle-2">EM a PX</h6>
            </li>
            <li>
                <h6 class="initTitle-3">Currency converter</h6>
            </li>
            <li>
                <h6 class="initTitle-4">Color converter</h6>
            </li>
        </ul>

        <ul class="flex flex-row [&_li]:opacity-0 [&_li]:transition-opacity [&_li]:duration-500">
            <li class="initText-1 !opacity-100">
                <MarkdownConverter />
            </li>
            <li class="initText-2 hidden">
                <EMtoPX/>
            </li>
            <li class="initText-3 hidden">
                <Currency />
            </li>
            <li class="initText-4 hidden flex flex-col gap-8">
                <h1 class="text-lg">Color Converter</h1>
                <HEXtoRGB />
                <HSL />
            </li>
        </ul>
    </article>

</section>


<script is:inline>
    // @ts-nocheck
    function initConverterScript () {
        let $ = selector => document.querySelector(selector);
    
        let initTexts = [];
        let initTitles = [];
    
        for (let i = 1; i <= 4; i++) {
            initTexts[`initText${i}`] = $(`.initText-${i}`);
            initTitles[`initTitle${i}`] = $(`.initTitle-${i}`);
    
            if (initTitles[`initTitle${i}`]) {
                initTitles[`initTitle${i}`].addEventListener('click', () => {
                    // Ocultar todos los initTexts
                    for (let j = 1; j <= 4; j++) {
                        initTexts[`initText${j}`].classList.add('hidden');
                        setTimeout(() => {
                            initTexts[`initText${j}`].classList.remove('!opacity-100');
                        }, 100);
                        initTitles[`initTitle${j}`].classList.remove('!text-white');
                    }
    
                    // Mostrar el initText correspondiente al initTitle clickeado
                    initTexts[`initText${i}`].classList.remove('hidden');
                    setTimeout(() => {
                        initTexts[`initText${i}`].classList.add('!opacity-100');
                    }, 100);
                    initTitles[`initTitle${i}`].classList.add('!text-white');
                });
            }
        }
    }

    initConverterScript()
    window.addEventListener('astro:page-load', initConverterScript);
    </script>
    